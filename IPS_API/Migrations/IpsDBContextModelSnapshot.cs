// <auto-generated />
using System;
using IPS_API.Model;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace IPS_API.Migrations
{
    [DbContext(typeof(IpsDBContext))]
    partial class IpsDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("IPS_API.Model.AccountType", b =>
                {
                    b.Property<int>("AccountTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("AccountTypeId");

                    b.ToTable("AccountType");
                });

            modelBuilder.Entity("IPS_API.Model.AssociatedIndividual", b =>
                {
                    b.Property<int>("AssociatedIndividualId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("CorporateAccountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateofBirth")
                        .HasColumnType("datetime");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("PersonalAccountId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(4)");

                    b.HasKey("AssociatedIndividualId");

                    b.HasIndex("AccountTypeId");

                    b.HasIndex("CorporateAccountId");

                    b.HasIndex("PersonalAccountId");

                    b.ToTable("AssociatedIndividual");
                });

            modelBuilder.Entity("IPS_API.Model.CompanyOfficer", b =>
                {
                    b.Property<int>("CompanyOfficerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CorporateAccountId")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("varchar(4)");

                    b.HasKey("CompanyOfficerId");

                    b.HasIndex("CorporateAccountId");

                    b.ToTable("CompanyOfficer");
                });

            modelBuilder.Entity("IPS_API.Model.CorporateAccount", b =>
                {
                    b.Property<int>("CorporateAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ABN")
                        .IsRequired()
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AccountNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("BSB")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CorporateAccountId");

                    b.ToTable("CorporateAccount");
                });

            modelBuilder.Entity("IPS_API.Model.PersonalAccount", b =>
                {
                    b.Property<int>("PersonalAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccountName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("AccountNo")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("BSB")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("TFN")
                        .IsRequired()
                        .HasColumnType("nvarchar(9)");

                    b.HasKey("PersonalAccountId");

                    b.ToTable("PersonalAccount");
                });

            modelBuilder.Entity("IPS_API.Model.AssociatedIndividual", b =>
                {
                    b.HasOne("IPS_API.Model.AccountType", "AccountType")
                        .WithMany()
                        .HasForeignKey("AccountTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IPS_API.Model.CorporateAccount", null)
                        .WithMany("AssociatedIndividualCorporate")
                        .HasForeignKey("CorporateAccountId");

                    b.HasOne("IPS_API.Model.PersonalAccount", null)
                        .WithMany("AssociatedIndividualPersonal")
                        .HasForeignKey("PersonalAccountId");
                });

            modelBuilder.Entity("IPS_API.Model.CompanyOfficer", b =>
                {
                    b.HasOne("IPS_API.Model.CorporateAccount", null)
                        .WithMany("CompanyOfficers")
                        .HasForeignKey("CorporateAccountId");
                });
#pragma warning restore 612, 618
        }
    }
}
